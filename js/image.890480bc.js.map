{"version":3,"file":"js/image.890480bc.js","mappings":"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","sources":["webpack://outer-circle/./src/helpers/renderer.js","webpack://outer-circle/./src/models/traits.js","webpack://outer-circle/./src/views/image/index.vue","webpack://outer-circle/./src/views/image/index.vue?2265","webpack://outer-circle/./src/assets/images/hexheads/ sync ^\\.\\/.*\\.png$"],"sourcesContent":["import metadata from '@/models/traits';\n\nlet total = 1;\nfor (let i = 0; i < metadata.length; i++) {\n    total += (total * metadata[i].length);\n}\n\nfunction generateAddress() {\n    let address = \"0x\";\n    for (let i = 0; i < 40; i++) {\n        address += Math.floor(Math.random() * 16).toString(16);\n    }\n    return address\n}\n\nfunction isFoil(idHex) {\n    const id = BigInt(idHex);\n    if (id % BigInt(\"1500000000\") === 0n) {\n        return true;\n    }\n    return false\n}\n\nfunction generateTraits(idHex) {\n    const traits = [];\n    idHex = idHex.slice(2);\n    const seed = Number(\"0x\"+idHex.slice(36, 40));\n    for (let i = 0; i < metadata.length; i++) { // TODO Change when adding a new layer\n        traits.push((Number(\"0x\" + idHex.slice(i*4, i*4+4)) + seed) % metadata[i].length);\n    }\n\n    // 11% without hair\n    if (seed % 9 === 0) {\n        traits[6] = undefined\n    }\n\n    // 20% without hat\n    if (seed % 5 === 0) {\n        traits[7] = undefined\n    }\n\n    // 90% without extra\n    if (seed % 10 !== 0) {\n        traits[8] = undefined\n    }\n\n    console.log(traits)\n\n    return traits;\n}\n\nfunction generate(idHex) {\n    if (idHex === undefined) {\n        idHex = generateAddress();\n    }\n    const traits = generateTraits(idHex);\n    drawFromTraits(traits);\n}\n\n//// DRAWING ////\n\nfunction drawFromTraits(traits) {\n    const ctx = document.getElementById('canvas').getContext('2d');\n    drawBackground(ctx, traits[0]);\n    drawDecoration(ctx, traits);\n}\n\nfunction drawBackground(ctx, id) {\n    let background = metadata[0][id];\n    if (background === undefined) {\n        background = \"#FFFFFF\";\n    }\n    ctx.fillStyle = background;\n    ctx.rect(0, 0, 32, 32);\n    ctx.fill();\n}\n\nfunction drawDecoration(ctx, traits) {\n    const id = traits[2];\n    const color = metadata[1][traits[1]];\n\n    if (id !== undefined && color !== undefined) {\n\n        let source = new Image();\n        source.src = require('@/assets/images/hexheads/1.png');\n\n        const row = Math.floor(id / 16);\n        const col = id % 16;\n        source.onload = () => {\n            ctx.drawImage(source,\n                col * 32, row * 32, 32, 32,\n                0, 0, 32, 32);\n\n            const imageData = ctx.getImageData(0, 0, 32, 32);\n            const data = imageData.data\n\n            for (let i = 0; i < data.length; i += 4) {\n                if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0) {\n                    data[i] = Number(\"0x\" + color.slice(1, 3));       // R\n                    data[i + 1] = Number(\"0x\" + color.slice(3, 5));   // G\n                    data[i + 2] = Number(\"0x\" + color.slice(5, 7));   // B\n                }\n            }\n            ctx.putImageData(imageData, 0, 0);\n            drawTrait(ctx, 3, traits);\n        }\n    } else {\n        drawTrait(ctx, 3, traits);\n    }\n}\n\nfunction drawTrait(ctx, layer, traits) {\n    if (layer >= metadata.length) return;\n\n    const trait = traits[layer];\n\n    if (trait !== undefined) {\n        let source = new Image();\n        source.src = require(`@/assets/images/hexheads/${ layer }.png`);\n        const row = Math.floor(trait / 16);\n        const col = trait % 16;\n        source.onload = () => {\n            ctx.drawImage(source,\n                col * 32, row * 32, 32, 32,\n                0, 0, 32, 32);\n            drawTrait(ctx, layer + 1, traits);\n        }\n    } else {\n        drawTrait(ctx, layer + 1, traits);\n    }\n}\n\nexport {\n    generateTraits,\n    generate,\n    drawFromTraits\n}\n","export default [\n    [\n        \"#E3AABE\", \"#ADC886\", \"#C9B0D4\", \"#E3AAD0\",\n        \"#9EDB83\", \"#92B8D8\", \"#86C8C4\", \"#B8C292\",\n        \"#5FCCB7\", \"#ACB8AC\", \"#92C6D8\", \"#BCAEA4\",\n        \"#90CBBD\", \"#C6BAE3\", \"#90CBA2\", \"#92D8C8\",\n        \"#A0E3D6\", \"#EAB9B2\", \"#C4C3C4\", \"#8DE0D0\",\n        \"#BBF2A3\", \"#B2EACF\", \"#C3D2F0\", \"#DBC8CF\",\n        \"#EAE2B2\", \"#C7EAB2\", \"#B5D5A8\", \"#E0EAB2\",\n        \"#EAD2B2\", \"#B9E5C7\", \"#B9E5DD\"\n    ],\n    [\n        \"#E3AABE\", \"#ADC886\", \"#C9B0D4\", \"#E3AAD0\",\n        \"#9EDB83\", \"#92B8D8\", \"#86C8C4\", \"#B8C292\",\n        \"#5FCCB7\", \"#ACB8AC\", \"#92C6D8\", \"#BCAEA4\",\n        \"#90CBBD\", \"#C6BAE3\", \"#90CBA2\", \"#92D8C8\",\n        \"#A0E3D6\", \"#EAB9B2\", \"#C4C3C4\", \"#8DE0D0\",\n        \"#BBF2A3\", \"#B2EACF\", \"#C3D2F0\", \"#DBC8CF\",\n        \"#EAE2B2\", \"#C7EAB2\", \"#B5D5A8\", \"#E0EAB2\",\n        \"#EAD2B2\", \"#B9E5C7\", \"#B9E5DD\"\n    ],\n    [...Array(256).keys()], // 1 - Decoration\n    [...Array(30).keys()], // 2 - Head\n    [...Array(256).keys()], // 3 - Mouth\n    [...Array(256).keys()], // 4 - Eyes\n    [...Array(256).keys()], // 5 - Hair\n    [...Array(256).keys()], // 6 - Hat\n    [...Array(26).keys()], // 7 - Extra\n];\n","<template>\n    <div></div>\n    <canvas class=\"w-[100vh] h-[100vh]\" id=\"canvas\" width=\"32\" height=\"32\"></canvas>\n</template>\n\n<script setup>\nimport { onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { generate } from '@/helpers/renderer';\n\n// META\n\nconst route = useRoute();\n\ndocument.body.style.overflow = 'hidden';\n\nonMounted(() => {\n    if (route.query.address) {\n        generate(route.query.address);\n    }\n});\n</script>\n\n<style scoped>\ncanvas {\n    width: 100vh;\n    height: 100vh;\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=6c908748&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/nikita/Desktop/work_local/HexHeads.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6c908748\"]])\n\nexport default __exports__","var map = {\n\t\"./1.png\": 7154,\n\t\"./3.png\": 4699,\n\t\"./4.png\": 4865,\n\t\"./5.png\": 9425,\n\t\"./6.png\": 6632,\n\t\"./7.png\": 8603,\n\t\"./8.png\": 2779\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3863;"],"names":["total","i","metadata","length","generateAddress","address","Math","floor","random","toString","generateTraits","idHex","traits","slice","seed","Number","push","undefined","console","log","generate","drawFromTraits","ctx","document","getElementById","getContext","drawBackground","drawDecoration","id","background","fillStyle","rect","fill","color","source","Image","src","require","row","col","onload","drawImage","imageData","getImageData","data","putImageData","drawTrait","layer","trait","Array","keys","route","useRoute","body","style","overflow","onMounted","query","__exports__","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","module","exports"],"sourceRoot":""}