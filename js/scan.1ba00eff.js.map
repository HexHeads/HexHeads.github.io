{"version":3,"file":"js/scan.1ba00eff.js","mappings":"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","sources":["webpack://outer-circle/./src/helpers/getTraits.js","webpack://outer-circle/./src/views/scan/index.vue","webpack://outer-circle/./src/views/scan/index.vue?d716"],"sourcesContent":["import traits from '@/models/traits';\n\nfunction getTraits() {\n    return {\n        backgroundColor: {\n            title: 'Background color',\n            items: traits[0]\n        },\n        decorationColor: {\n            title: 'Decoration color',\n            items: traits[1]\n        },\n        decoration: {\n            title: 'Decoration',\n            items: traits[2],\n            sprite: 1\n        },\n        head: {\n            title: 'Head',\n            items: traits[3],\n            sprite: 3\n        },\n        mouth: {\n            title: 'Mouth',\n            items: traits[4],\n            sprite: 4\n        },\n        eyes: {\n            title: 'Eyes',\n            items: traits[5],\n            sprite: 5\n        },\n        hair: {\n            title: 'Hair',\n            items: traits[6],\n            sprite: 6\n        },\n        hat: {\n            title: 'Hat',\n            items: traits[7],\n            sprite: 7\n        },\n        extra: {\n            title: 'Extra',\n            items: traits[8],\n            sprite: 8\n        }\n    }\n}\n\nfunction getTraitsForForm() {\n    const traits = getTraits();\n    const result = {};\n\n    for (let key in traits) {\n        result[key] = {\n            ...traits[key],\n            items: traits[key].items.map((item, index) => ({ id: index, title: item }))\n        }\n    }\n\n    return result;\n}\n\nfunction getTraitsByIndexex(_traitsIndexes) {\n    const indexes = [..._traitsIndexes];\n    const traits = getTraits();\n    let index = 0;\n    const result = {\n    };\n\n    for (let key in traits) {\n        result[key] = {\n            ...traits[key],\n            value: traits[key].items.find((item, _index) => indexes[index] === _index)\n        }\n        index += 1;\n    }\n\n    return result;\n}\n\nexport {\n    getTraits,\n    getTraitsForForm,\n    getTraitsByIndexex\n};\n","<template>\n    <div>\n        <div class=\"flex -mt-12 -mx-12 mb-[71px] relative md:flex-col md:text-center md:items-center\">\n            <div v-if=\"isSearching\" class=\"-preloader-dots\"></div>\n            <div class=\"px-12 mt-12\">\n                <div class=\"drop-shadow-[0_0_15px_rgba(0,_0,_0,_0.25)]\">\n                    <HexHead\n                        :placeholder=\"!resultAddress\"\n                        :address=\"resultAddress\"\n                        size=\"xl\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col px-12 mt-12 flex-grow md:w-full\">\n                <TextField\n                    v-model=\"field\"\n                    class=\"mb-3\"\n                    placeholder=\"Address / ENS / ID\"\n                />\n                <div\n                    v-if=\"resultAddress\"\n                    class=\"mb-3\"\n                >\n                    <div class=\"mb-3\">\n                        <template v-if=\"owner\">\n                            Claimed by <ActionLink theme=\"secondary\" :href=\"addressLink\" target=\"_blank\">{{ cutAddress(owner) }}</ActionLink>\n                        </template>\n                        <template v-else>\n                            Not claimed yet\n                        </template>\n<!--                        Claimed on 12 Jan 2023 by <ActionLink theme=\"secondary\" href=\"#\">0x1CcA...C912</ActionLink>-->\n                    </div>\n                    <div class=\"flex justify-between\">\n                        <div class=\"mb-3\">\n                            Role: <span class=\"text-primary-500\">Observer</span>\n                        </div>\n                        <div>\n                            <ActionLink\n                                v-if=\"opensea\"\n                                theme=\"secondary\"\n                                :href=\"opensea\"\n                                target=\"_blank\"\n                            >\n                                OpenSea\n                            </ActionLink>\n<!--                            |  <ActionLink theme=\"secondary\">LooksRare</ActionLink> |  <ActionLink theme=\"secondary\">Frenly</ActionLink>-->\n                        </div>\n                    </div>\n                    <div\n                        v-if=\"privateKey\"\n                        class=\"mb-3 break-words\"\n                    >\n                        Private key (will be destroyed after page reload):\n                        <br>\n                        {{ privateKey }}\n                    </div>\n                </div>\n\n                <div\n                    v-if=\"resultAddress\"\n                    class=\"flex flex-wrap -mx-[20px] -mt-6\"\n                >\n                    <div\n                        class=\"w-1/2 px-[20px] mt-6 sm:w-full\"\n                        v-for=\"(item, key) in traits\"\n                        :key=\"key\"\n                    >\n                        <div class=\"h-[74px] flex items-center border-2 border-black text-md text-center px-4 py-2 relative\">\n                            <div class=\"text-primary-500 mr-auto\">\n                                {{ item.title }} {{ item.value }}\n                            </div>\n                            <div\n                                v-if=\"['decorationColor', 'backgroundColor'].includes(key)\"\n                                class=\"h-[32px] w-[32px]\"\n                                :style=\"`background-color:${ item.value }`\"\n                            >\n                            </div>\n                            <div\n                                v-else-if=\"item.value !== undefined\"\n                                class=\"h-[32px] w-[32px] bg-no-repeat\"\n                                :class=\"{\n                                    'scale-[1.8]': ['extra', 'head', 'mouth', 'eyes'].includes(key)\n                                }\"\n                                :style=\"`background-image:url(${ require(`@/assets/images/hexheads/${ item.sprite }.png`) });background-position:${ -(item.value - (Math.floor((item.value / 16))) * 16) * 32 }px ${ Math.floor((item.value / 16)) * -32 }px;`\"\n                            >\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        v-if=\"isFoilCheck\"\n                        class=\"w-1/2 px-[20px] mt-6 sm:w-full\"\n                    >\n                        <div class=\"h-[74px] flex items-center border-2 border-primary-500 text-md text-center px-4 py-2 relative\">\n                            <div class=\"text-primary-500 mr-auto\">\n                                Foil\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div>\n            <div class=\"text-xxl mb-8\">\n                HexHeads are faces of Ethereum community!\n            </div>\n            <div class=\"text-md\">\n<!--                There are more than <span class=\"text-primary-500\">1.5 quadrillion</span> unique HexHeads and exactly-->\n<!--                <br>-->\n<!--                1'461'501'637'330'902'918'203'684'832'716'283'019'655'932'542'975 in total and every Ethereum address owns one!-->\n<!--                <br><br>-->\n                HexHeads are supported by several Web3 projects to render users' avatars in their apps, but there's more...\n                <br><br>\n                Since these NFTs are owned by everyone, HexHeads is <span class=\"text-primary-500\">the largest Web3 community</span> and a DAO.\n                <br>\n                There are two roles: Observer and Prime.\n                <br><br>\n                Fell free to claim your NFT for free, join our <ActionLink\n                theme=\"secondary\"\n                href=\"https://discord.gg/xMRhYCMbQ7\"\n                target=\"_blank\"\n            >\n                Discord\n            </ActionLink> and become an Observer.\n                <br>\n                If you wish to access our private server, take a part in DAO voting and get all benefits, chase for the Prime role.\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, watch , computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { utils } from 'ethers';\nimport { debounce } from 'lodash';\nimport HexHead from '@/components/HexHead/HexHead';\nimport ActionLink from '@/components/ActionLink/ActionLink';\nimport TextField from '@/components/Form/TextField/TextField';\nimport API from '@/helpers/api';\n\nimport { getTraitsByIndexex } from '@/helpers/getTraits';\nimport { generateTraits, isFoil } from '@/helpers/renderer';\nimport cutAddress from '@/helpers/cutAddress';\nimport HexHeadsService from '@/services/HexHeadsService';\n\nimport { store } from '@/store';\n\n// META\n\nconst route = useRoute();\n\nconst address = ref(route.query.address || '');\n\nconst field = ref(address.value);\n\nconst traits = ref({});\n\n\n// PRIVATE KEY\n\nconst privateKey = store.state.collection.privateKey;\n\nif (privateKey) {\n    store.dispatch('collection/removePrivateKey');\n}\n\n// SEARCH\n\nconst isSearching = ref(false);\n\nconst searchDebounced = debounce(search, 500);\n\nconst resultAddress = computed(() => utils.isAddress(address.value) ? address.value : '');\n\nlet isFoilCheck = ref(false);\n\nasync function search() {\n    const value = field.value.trim();\n\n    isSearching.value = true;\n\n    try {\n        let resultAddress = '';\n\n        if (utils.isAddress(value)) {\n            resultAddress = value;\n            // eslint-disable-next-line no-undef\n        } else if (utils.isAddress(('0x' + BigInt(value).toString(16)))) {\n            // eslint-disable-next-line no-undef\n            resultAddress = ('0x' + BigInt(value).toString(16));\n        } else {\n            const addressName = await API.provider?.resolveName(value);\n\n            if (addressName) {\n                resultAddress = addressName;\n            }\n        }\n\n\n        address.value = resultAddress;\n        setTraits();\n        if (resultAddress) {\n            await checkAndSetMint();\n        }\n    } catch (e) {\n        console.log(e);\n        traits.value = {};\n    }\n\n    isSearching.value = false;\n}\n\nsetTraits();\n\nwatch(field, searchDebounced);\n\nfunction setTraits() {\n    if (address.value) {\n        const items = generateTraits(address.value);\n\n        traits.value = getTraitsByIndexex(items);\n    }\n}\n\n\n// OWNER\n\nconst owner = ref('');\n\nasync function checkAndSetMint() {\n    owner.value = null;\n\n    if (!address.value) {\n        return;\n    }\n\n    const [mintedAddress] = await HexHeadsService.ownerOf(address.value);\n\n    owner.value = mintedAddress;\n    isFoilCheck.value = isFoil(address.value);\n}\n\ncheckAndSetMint();\n\n\n// OPENSEA LINK\n\n// eslint-disable-next-line no-undef\nconst opensea = computed(() => owner.value ? `https://opensea.io/assets/ethereum/${ process.env.VUE_APP_HEXHEADS_ADDRESS_ETHEREUM }/${ BigInt(owner.value).toString() }` : '');\n\nconst addressLink = computed(() => owner.value ? `https://etherscan.io/address/${owner.value }` : '');\n</script >\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getTraits","backgroundColor","title","items","traits","decorationColor","decoration","sprite","head","mouth","eyes","hair","hat","extra","getTraitsForForm","result","key","map","item","index","id","getTraitsByIndexex","_traitsIndexes","indexes","value","find","_index","route","useRoute","address","ref","query","field","privateKey","store","isSearching","searchDebounced","debounce","search","resultAddress","computed","utils","isFoilCheck","async","trim","BigInt","toString","addressName","API","resolveName","setTraits","checkAndSetMint","e","console","log","generateTraits","watch","owner","mintedAddress","HexHeadsService","isFoil","opensea","addressLink","__exports__"],"sourceRoot":""}