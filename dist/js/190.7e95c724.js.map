{"version":3,"file":"js/190.7e95c724.js","mappings":"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","sources":["webpack://outer-circle/./src/helpers/getTraits.js","webpack://outer-circle/./src/helpers/renderer.js","webpack://outer-circle/./src/models/traits.js","webpack://outer-circle/./src/assets/images/hexheads/ sync ^\\.\\/.*\\.png$"],"sourcesContent":["import traits from '@/models/traits';\n\nfunction getTraits() {\n    return {\n        backgroundColor: {\n            title: 'Background color',\n            items: traits[0]\n        },\n        decorationColor: {\n            title: 'Decoration color',\n            items: traits[1]\n        },\n        decoration: {\n            title: 'Decoration',\n            items: traits[2],\n            sprite: 1\n        },\n        head: {\n            title: 'Head',\n            items: traits[3],\n            sprite: 3\n        },\n        mouth: {\n            title: 'Mouth',\n            items: traits[4],\n            sprite: 4\n        },\n        eyes: {\n            title: 'Eyes',\n            items: traits[5],\n            sprite: 5\n        },\n        hair: {\n            title: 'Hair',\n            items: traits[6],\n            sprite: 6\n        },\n        hat: {\n            title: 'Hat',\n            items: traits[7],\n            sprite: 7\n        },\n        extra: {\n            title: 'Extra',\n            items: traits[8],\n            sprite: 8\n        }\n    }\n}\n\nfunction getTraitsForForm() {\n    const traits = getTraits();\n    const result = {};\n\n    for (let key in traits) {\n        result[key] = {\n            ...traits[key],\n            items: traits[key].items.map((item, index) => ({ id: index, title: item }))\n        }\n    }\n\n    return result;\n}\n\nfunction getTraitsByIndexex(_traitsIndexes) {\n    const indexes = [..._traitsIndexes];\n    const traits = getTraits();\n    let index = 0;\n    const result = {\n    };\n\n    for (let key in traits) {\n        result[key] = {\n            ...traits[key],\n            value: traits[key].items.find((item, _index) => indexes[index] === _index)\n        }\n        index += 1;\n    }\n\n    return result;\n}\n\nexport {\n    getTraits,\n    getTraitsForForm,\n    getTraitsByIndexex\n};\n","import metadata from '@/models/traits';\n\nlet total = 1;\nfor (let i = 0; i < metadata.length; i++) {\n    total += (total * metadata[i].length);\n}\n\nfunction generateAddress() {\n    let address = \"0x\";\n    for (let i = 0; i < 40; i++) {\n        address += Math.floor(Math.random() * 16).toString(16);\n    }\n    return address\n}\n\nfunction isFoil(idHex) {\n    const id = BigInt(idHex);\n    if (id % BigInt(\"1500000000\") === 0n) {\n        return true;\n    }\n    return false\n}\n\nfunction generateTraits(idHex) {\n    const traits = [];\n    idHex = idHex.slice(2);\n    const seed = Number(\"0x\"+idHex.slice(36, 40));\n    for (let i = 0; i < metadata.length; i++) { // TODO Change when adding a new layer\n        traits.push((Number(\"0x\" + idHex.slice(i*4, i*4+4)) + seed) % metadata[i].length);\n    }\n\n    // 11% without hair\n    if (seed % 9 === 0) {\n        traits[6] = undefined\n    }\n\n    // 20% without hat\n    if (seed % 5 === 0) {\n        traits[7] = undefined\n    }\n\n    // 90% without extra\n    if (seed % 10 !== 0) {\n        traits[8] = undefined\n    }\n\n    console.log(traits)\n\n    return traits;\n}\n\nfunction generate(idHex) {\n    if (idHex === undefined) {\n        idHex = generateAddress();\n    }\n    const traits = generateTraits(idHex);\n    drawFromTraits(traits);\n}\n\n//// DRAWING ////\n\nfunction drawFromTraits(traits) {\n    const ctx = document.getElementById('canvas').getContext('2d');\n    drawBackground(ctx, traits[0]);\n    drawDecoration(ctx, traits);\n}\n\nfunction drawBackground(ctx, id) {\n    let background = metadata[0][id];\n    if (background === undefined) {\n        background = \"#FFFFFF\";\n    }\n    ctx.fillStyle = background;\n    ctx.rect(0, 0, 32, 32);\n    ctx.fill();\n}\n\nfunction drawDecoration(ctx, traits) {\n    const id = traits[2];\n    const color = metadata[1][traits[1]];\n\n    if (id !== undefined && color !== undefined) {\n\n        let source = new Image();\n        source.src = require('@/assets/images/hexheads/1.png');\n\n        const row = Math.floor(id / 16);\n        const col = id % 16;\n        source.onload = () => {\n            ctx.drawImage(source,\n                col * 32, row * 32, 32, 32,\n                0, 0, 32, 32);\n\n            const imageData = ctx.getImageData(0, 0, 32, 32);\n            const data = imageData.data\n\n            for (let i = 0; i < data.length; i += 4) {\n                if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0) {\n                    data[i] = Number(\"0x\" + color.slice(1, 3));       // R\n                    data[i + 1] = Number(\"0x\" + color.slice(3, 5));   // G\n                    data[i + 2] = Number(\"0x\" + color.slice(5, 7));   // B\n                }\n            }\n            ctx.putImageData(imageData, 0, 0);\n            drawTrait(ctx, 3, traits);\n        }\n    } else {\n        drawTrait(ctx, 3, traits);\n    }\n}\n\nfunction drawTrait(ctx, layer, traits) {\n    if (layer >= metadata.length) return;\n\n    const trait = traits[layer];\n\n    if (trait !== undefined) {\n        let source = new Image();\n        source.src = require(`@/assets/images/hexheads/${ layer }.png`);\n        const row = Math.floor(trait / 16);\n        const col = trait % 16;\n        source.onload = () => {\n            ctx.drawImage(source,\n                col * 32, row * 32, 32, 32,\n                0, 0, 32, 32);\n            drawTrait(ctx, layer + 1, traits);\n        }\n    } else {\n        drawTrait(ctx, layer + 1, traits);\n    }\n}\n\nexport {\n    generateTraits,\n    generate,\n    drawFromTraits\n}\n","export default [\n    [\n        \"#E3AABE\", \"#ADC886\", \"#C9B0D4\", \"#E3AAD0\",\n        \"#9EDB83\", \"#92B8D8\", \"#86C8C4\", \"#B8C292\",\n        \"#5FCCB7\", \"#ACB8AC\", \"#92C6D8\", \"#BCAEA4\",\n        \"#90CBBD\", \"#C6BAE3\", \"#90CBA2\", \"#92D8C8\",\n        \"#A0E3D6\", \"#EAB9B2\", \"#C4C3C4\", \"#8DE0D0\",\n        \"#BBF2A3\", \"#B2EACF\", \"#C3D2F0\", \"#DBC8CF\",\n        \"#EAE2B2\", \"#C7EAB2\", \"#B5D5A8\", \"#E0EAB2\",\n        \"#EAD2B2\", \"#B9E5C7\", \"#B9E5DD\"\n    ],\n    [\n        \"#E3AABE\", \"#ADC886\", \"#C9B0D4\", \"#E3AAD0\",\n        \"#9EDB83\", \"#92B8D8\", \"#86C8C4\", \"#B8C292\",\n        \"#5FCCB7\", \"#ACB8AC\", \"#92C6D8\", \"#BCAEA4\",\n        \"#90CBBD\", \"#C6BAE3\", \"#90CBA2\", \"#92D8C8\",\n        \"#A0E3D6\", \"#EAB9B2\", \"#C4C3C4\", \"#8DE0D0\",\n        \"#BBF2A3\", \"#B2EACF\", \"#C3D2F0\", \"#DBC8CF\",\n        \"#EAE2B2\", \"#C7EAB2\", \"#B5D5A8\", \"#E0EAB2\",\n        \"#EAD2B2\", \"#B9E5C7\", \"#B9E5DD\"\n    ],\n    [...Array(256).keys()], // 1 - Decoration\n    [...Array(30).keys()], // 2 - Head\n    [...Array(256).keys()], // 3 - Mouth\n    [...Array(256).keys()], // 4 - Eyes\n    [...Array(256).keys()], // 5 - Hair\n    [...Array(256).keys()], // 6 - Hat\n    [...Array(26).keys()], // 7 - Extra\n];\n","var map = {\n\t\"./1.png\": 7154,\n\t\"./3.png\": 4699,\n\t\"./4.png\": 4865,\n\t\"./5.png\": 9425,\n\t\"./6.png\": 6632,\n\t\"./7.png\": 8603,\n\t\"./8.png\": 2779\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3863;"],"names":["getTraits","backgroundColor","title","items","traits","decorationColor","decoration","sprite","head","mouth","eyes","hair","hat","extra","getTraitsForForm","result","key","map","item","index","id","getTraitsByIndexex","_traitsIndexes","indexes","value","find","_index","total","i","metadata","length","generateAddress","address","Math","floor","random","toString","generateTraits","idHex","slice","seed","Number","push","undefined","console","log","generate","drawFromTraits","ctx","document","getElementById","getContext","drawBackground","drawDecoration","background","fillStyle","rect","fill","color","source","Image","src","require","row","col","onload","drawImage","imageData","getImageData","data","putImageData","drawTrait","layer","trait","Array","keys","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","module","exports"],"sourceRoot":""}